{"version":3,"sources":["components/Header.js","components/SearchInput.js","components/EmojiRow.js","components/EmojiResult.js","logic/filterEmoji.js","App.js","index.js"],"names":["Header","className","PureComponent","SearchInput","handleChange","event","props","textChange","onChange","this","EmojiRow","codePointHex","symbol","codePointAt","toString","src","data-clipboard-text","alt","title","EmojiResult","clipboard","Clipboard","destroy","emojiData","map","filterEmoji","searchText","maxResult","emojiList","filter","emoji","toLowerCase","includes","keywords","slice","App","handleSearchChange","setState","filteredEmoji","target","value","state","ReactDOM","render","document","getElementById"],"mappings":"4tsKAGqBA,E,4JACjB,WACI,OACI,wBAAQC,UAAU,mBAAlB,8B,GAHwBC,iBCEfC,G,kNAKjBC,aAAe,SAAAC,GACX,EAAKC,MAAMC,WAAWF,I,4CAG1B,WACI,OACI,qBAAKJ,UAAU,yBAAf,SACI,8BACI,uBAAOO,SAAUC,KAAKL,uB,GAbDF,kB,gBCDpBQ,G,kKAMnB,WACE,IAAMC,EAAeF,KAAKH,MAAMM,OAAOC,YAAY,GAAGC,SAAS,IACzDC,EAAG,iDAA6CJ,EAA7C,QACT,OACE,sBACEV,UAAU,wCACVe,sBAAqBP,KAAKH,MAAMM,OAFlC,UAIE,qBAAKK,IAAKR,KAAKH,MAAMY,MAAOH,IAAKA,IACjC,sBAAMd,UAAU,QAAhB,SAAyBQ,KAAKH,MAAMY,QACpC,sBAAMjB,UAAU,OAAhB,wC,GAhB8BC,kBCEjBiB,E,uKAKnB,WACEV,KAAKW,UAAY,IAAIC,IAAU,wB,kCAGjC,WACEZ,KAAKW,UAAUE,Y,oBAGjB,WACE,OACE,qBAAKrB,UAAU,yBAAf,SACGQ,KAAKH,MAAMiB,UAAUC,KAAI,SAAAD,GAAS,OACjC,cAAC,EAAD,CAEEX,OAAQW,EAAUX,OAClBM,MAAOK,EAAUL,OAFZK,EAAUL,gB,GAlBchB,iB,OCH1B,SAASuB,EAAYC,EAAYC,GAC5C,OAAOC,EAAUC,QAAO,SAAAC,GACpB,QAAIA,EAAMZ,MAAMa,cAAcC,SAASN,EAAWK,kBAI9CD,EAAMG,SAASD,SAASN,MAK7BQ,MAAM,EAAGP,G,ICRKQ,E,kDACnB,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAMR8B,mBAAqB,SAAA/B,GACnB,EAAKgC,SAAS,CACZC,cAAeb,EAAYpB,EAAMkC,OAAOC,MAAO,OAPjD,EAAKC,MAAQ,CACXH,cAAeb,EAAY,GAAI,KAHhB,E,0CAanB,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAalB,WAAYE,KAAK2B,qBAC9B,cAAC,EAAD,CAAab,UAAWd,KAAKgC,MAAMH,uB,GAnBVpC,iB,YCAjCwC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.72193cac.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends PureComponent {\r\n    render() {\r\n        return(\r\n            <header className=\"component-header\">\r\n                Emoji Search\r\n            </header>\r\n        );\r\n    }\r\n}","import React, {PureComponent} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './SearchInput.css';\r\n\r\nexport default class SearchInput extends PureComponent {\r\n    static propTypes = {\r\n        textChange: PropTypes.func\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.props.textChange(event);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"component-search-input\">\r\n                <div>\r\n                    <input onChange={this.handleChange} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./EmojiRow.css\";\r\n\r\nexport default class EmojiRow extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    symbol: PropTypes.string\r\n  };\r\n\r\n  render() {\r\n    const codePointHex = this.props.symbol.codePointAt(0).toString(16);\r\n    const src = `//cdn.jsdelivr.net/emojione/assets/png/${codePointHex}.png`;\r\n    return (\r\n      <div\r\n        className=\"component-emoji-row copy-to-clipboard\"\r\n        data-clipboard-text={this.props.symbol}\r\n      >\r\n        <img alt={this.props.title} src={src} />\r\n        <span className=\"title\">{this.props.title}</span>\r\n        <span className=\"info\">Click to copy emoji</span>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Clipboard from 'clipboard';\r\n\r\nimport EmojiRow from \"./EmojiRow\";\r\n\r\nexport default class EmojiResult extends PureComponent {\r\n  static propTypes = {\r\n    emojiData: PropTypes.array\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.clipboard = new Clipboard(\".copy-to-clipboard\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clipboard.destroy();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-emoji-result\">\r\n        {this.props.emojiData.map(emojiData => (\r\n          <EmojiRow\r\n            key={emojiData.title}\r\n            symbol={emojiData.symbol}\r\n            title={emojiData.title}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}","import emojiList from \"../data/emojiList.json\";\r\n\r\n// Functionality to filter emote list based on text input\r\nexport default function filterEmoji(searchText, maxResult) {\r\n    return emojiList.filter(emoji => {\r\n        if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\r\n            return true;\r\n        }\r\n\r\n        if (emoji.keywords.includes(searchText)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }).slice(0, maxResult);\r\n}","import React, { PureComponent } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchInput from \"./components/SearchInput\";\nimport EmojiResult from \"./components/EmojiResult\";\nimport filterEmoji from \"./logic/filterEmoji\";\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredEmoji: filterEmoji(\"\", 20)\n    };\n  }\n\n  handleSearchChange = event => {\n    this.setState({\n      filteredEmoji: filterEmoji(event.target.value, 20)\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchInput textChange={this.handleSearchChange} />\n        <EmojiResult emojiData={this.state.filteredEmoji} />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'github-fork-ribbon-css/gh-fork-ribbon.css';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}